using namespace std;
#include <cmath>
namespace Bud
{   
    long long sum_divs(long long num){
      long long a = 1;
      for (long long j = 2; j<= sqrt(num); j++){
        if (num % j==0){
          if (num/j == j) a += 1;
          else a += (num/j + j);  
        }
      }
      return a;
    }
    std::string number_to_string(int num) {
      std::string word = "";
      int a = 0;
      if (num < 0){
        num = num*(-1);
        a = 1;
      }
      while (num != 0){
        word += (char)48 + num%10;
        num = num/10;
      }
      for (int i = 0; i < (int)word.size()/2; i++){
        char tmp = word[i];
        word[i]=word[word.size()-1-i];
        word[word.size()-1-i] = tmp;
    
      }
      if (a == 1){
        word = "-"+word;
      }
      return word;
    }
    string buddy(long long start, long long limit)
    { 
      for (long long i = start; i <= limit; i++){
          long long a = sum_divs(i) - 1;
          if (a <= i) continue;
          if (sum_divs(a) == i+1){
             string res = "";
             res += '(' + number_to_string(i) + ' ' + number_to_string(a) + ')';
             return res;
          }
        }
        return "Nothing";
    }
}
